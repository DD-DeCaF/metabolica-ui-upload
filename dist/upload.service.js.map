{"version":3,"sources":["upload.service.ts"],"names":[],"mappings":";AAAA,6CAA6C;AAC7C,QAAO,gBAAgB,CAAC,CAAA;AAGxB,IAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;AAExE,mBAAmB,KAAK;IACvB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAS,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAA,CAAA,CAAC,CAAE,CAAA;AAChD,CAAC;AAGD;IAGC,uBAAY,MAA+C;QAC1D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IACxB,CAAC;IAGD,kCAAU,GAAV,UAAW,IAAI;QACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC3B,GAAG,EAAE,8BAA8B;YACnC,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;SACd,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI;YACpB,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAChG,MAAM,CAAC,IAAI,CAAC;QACb,CAAC,EACD,UAAU,IAAI;YACb,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC,EAAE,UAAU,GAAG;YACf,IAAI,kBAAkB,GAAG,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,kBAAkB,GAAG,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACL,CAAC;IACF,oBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,qBAAa,gBAyBzB,CAAA;AAED,aAAa,CAAC,OAAO,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AACtD;kBAAe,aAAa,CAAC","file":"upload.service.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\"/>\nimport 'ng-file-upload';\nimport {API_ROOT_URL} from './constants';\n\nconst uploadService = angular.module('uploadService', ['ngFileUpload']);\n\nfunction fileNames(files) {\n\treturn files.map(function(a) { return a.name} )\n}\n\n\nexport class UploadService {\n\tngUpload:angular.angularFileUpload.IUploadService;\n\n\tconstructor(Upload:angular.angularFileUpload.IUploadService) {\n\t\tthis.ngUpload = Upload;\n\t}\n\n\n\tuploadFile(data) {\n\t\treturn this.ngUpload.upload({\n\t\t\turl: 'http://localhost:8000/upload',\n\t\t\tdata: data,\n\t\t\tmethod: 'POST'\n\t\t}).then(function (resp) {\n\t\t\t\tconsole.log('Success ' + fileNames(resp.config.data.file) + 'uploaded. Response: ' + resp.data);\n\t\t\t\treturn resp;\n\t\t\t},\n\t\t\tfunction (resp) {\n\t\t\t\tconsole.log('Error status: ' + resp.status);\n\t\t\t\tconsole.log('Error data: ' + resp.message);\n\t\t\t}, function (evt) {\n\t\t\t\tvar progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n\t\t\t\tconsole.log('progress: ' + progressPercentage + '% ' + fileNames(evt.config.data.file));\n\t\t\t});\n\t}\n}\n\nuploadService.service('UploadService', UploadService);\nexport default uploadService;\n"]}