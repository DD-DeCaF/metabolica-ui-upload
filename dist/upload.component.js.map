{"version":3,"sources":["upload.component.ts"],"names":[],"mappings":"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","file":"upload.component.js","sourcesContent":["// <reference path=\"../typings/index.d.ts\"/>\nimport * as angular from 'angular';\nimport 'angular-material';\n//docs https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/angular-material/angular-material.d.ts#L30\n\n// noinspection TypeScriptCheckImport\nimport {dirname} from 'decaf-common';\nimport './upload.component.css!';\nimport uploadService, {UploadService} from './upload.service';\n\n\nexport const COMPONENT_NAME = 'upload';\nconst upload = angular.module(COMPONENT_NAME, [\n\tuploadService.name\n]);\n\nupload.config(function (platformProvider) {\n\tplatformProvider\n\t\t.register(COMPONENT_NAME)\n\t\t.state(COMPONENT_NAME, {\n\t\t\turl: `/${COMPONENT_NAME}`,\n\t\t\tviews: {\n\t\t\t\t'content@': {\n\t\t\t\t\ttemplateUrl: `${dirname(module.id)}/upload.component.html`,\n\t\t\t\t\tcontroller: UploadController,\n\t\t\t\t\tcontrollerAs: 'UploadController'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n});\n\nclass UploadController {\n\tisWaiting:boolean;\n\tuploadService:UploadService;\n\tdata:any;\n\texpectedFields:any[];\n\tprojects:any[];\n\tselected_project:string;\n\tselected_upload:string;\n\texamples:any;\n\tprivate $mdDialog:angular.material.IDialogService;\n\tprivate $timeout:angular.ITimeoutService;\n\tprivate $sce:angular.ISCEService;\n\n\tconstructor($timeout, $sce, $mdDialog, UploadService:UploadService) {\n\t\tthis.uploadService = UploadService;\n\t\tthis.$timeout = $timeout;\n\t\tthis.$sce = $sce;\n\t\tthis.$mdDialog = $mdDialog;\n\t\tthis.isWaiting = false;\n\t\tthis.expectedFields = [];\n\t\tthis.projects = [];\n\t\tthis.data = {\n\t\t\tmedia: {\n\t\t\t\tfiles: {media: ''}, status: 'na', what: 'media', order: ['media']\n\t\t\t},\n\t\t\tstrains: {\n\t\t\t\tfiles: {strains: ''}, status: 'na', what: 'strains', order: ['strains']\n\t\t\t},\n\t\t\tfermentation: {\n\t\t\t\tfiles: {sample_information: '', physiology: ''},\n\t\t\t\tstatus: 'na',\n\t\t\t\twhat: 'fermentation',\n\t\t\t\torder: ['sample_information', 'physiology']\n\t\t\t},\n\t\t\tscreen: {\n\t\t\t\tfiles: {screen: ''}, status: 'na', what: 'screen', order: ['screen'],\n\t\t\t}\n\t\t};\n\t\tthis.examples = {\n\t\t\tscreen: 'https://github.com/DD-DeCaF/upload/blob/master/upload/data/examples/screening.csv',\n\t\t\tsample_information: 'https://github.com/DD-DeCaF/upload/blob/master/upload/data/examples/samples.csv',\n\t\t\tphysiology: 'https://github.com/DD-DeCaF/upload/blob/master/upload/data/examples/physiology.csv',\n\t\t\tstrains: 'https://github.com/DD-DeCaF/upload/blob/master/upload/data/examples/strains.csv',\n\t\t\tmedia: 'https://github.com/DD-DeCaF/upload/blob/master/upload/data/examples/media.csv'\n\n\t\t};\n\t\tthis.getProjects();\n\t\tthis.selected_project = '';\n\t\tthis.selected_upload = '';\n\t}\n\n\tselectedData() {\n\t\treturn this.data[this.selected_upload];\n\t}\n\n\tselectedFile(inputFile) {\n\t\treturn this.data[this.selected_upload].files[inputFile];\n\t}\n\n\tgetSchema(inputFile) {\n\t\tthis.expectedFields = [];\n\t\tthis.uploadService.getSchema(inputFile)\n\t\t\t.then((data:any) => {\n\t\t\t\tdata.data.fields.forEach((value) => {\n\t\t\t\t\tthis.expectedFields.push(value)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetProjects() {\n\t\tthis.uploadService.getProjects()\n\t\t\t.then((data:any) => {\n\t\t\t\tdata.data.forEach((value) => {\n\t\t\t\t\tthis.projects.push(value)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tshowHelpAlert(inputFile) {\n\t\tthis.getSchema(inputFile);\n\t\tthis.$mdDialog.show({\n\t\t\t// can't use html files as they are not moved to dist for main app\n\t\t\ttemplate: `\n<md-dialog aria-label=\"File specification for {{item}} upload\">\n    <form ng-cloak>\n        <md-toolbar>\n            <div class=\"md-toolbar-tools\">\n                <h2>File specification for {{inputFile}} upload</h2>\n                <span flex></span>\n            </div>\n        </md-toolbar>\n\n        <md-dialog-content>\n            <div class=\"md-dialog-content\">\n                The input (<a href=\"{{example}}\" target=\"_blank\">example</a>) must be plain text comma separated value (csv) file \n                with columns listed below. All columns must be present but their order does not matter and cells can be left \n                empty unless marked as <i>required</i>. \n                <md-list>\n                    <md-list-item ng-repeat=\"field in expectedFields\">\n                        <p><b>{{field.name}}</b>, {{field.type}}: {{field.title}}\n                            <i ng-if=\"field.constraints.enum\">must be one of: [<i\n                                ng-repeat=\"item in field.constraints.enum\">\"{{item}}\", </i>]</i>\n                            <i ng-if=\"field.constraints.required\">(required)</i>\n                        </p>\n                    </md-list-item>\n                </md-list>\n            </div>\n        </md-dialog-content>\n\n        <md-dialog-actions layout=\"row\">\n            <span flex></span>\n            <md-button ng-click=\"close()\">\n                Close\n            </md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>`,\n\t\t\tparent: angular.element(document.querySelector('#popupContainer')),\n\t\t\tclickOutsideToClose: true,\n\t\t\tlocals: {\n\t\t\t\texpectedFields: this.expectedFields,\n\t\t\t\tinputFile: inputFile,\n\t\t\t\texample: this.examples[inputFile]\n\t\t\t},\n\t\t\tcontroller($scope, $mdDialog:ng.material.IDialogService, expectedFields, inputFile, example) {\n\t\t\t\t$scope.expectedFields = expectedFields;\n\t\t\t\t$scope.example = example;\n\t\t\t\t$scope.inputFile = inputFile;\n\t\t\t\t$scope.close = () => {\n\t\t\t\t\t$mdDialog.hide();\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tsetFile(file, which) {\n\t\tthis.data[this.selected_upload].files[which] = file;\n\t}\n\n\tclear() {\n\t\tfor (var what in this.data) {\n\t\t\tif (this.data.hasOwnProperty(what)) {\n\t\t\t\tfor (var key in this.data[what].files) {\n\t\t\t\t\tif (this.data[what].files.hasOwnProperty(key)) {\n\t\t\t\t\t\tthis.data[what].files[key] = '';\n\t\t\t\t\t\tthis.data[what].status = 'na';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tbuildFileList(what) {\n\t\tvar fileList = [];\n\t\tfor (var i = 0; i < this.data[what].order.length; i++) {\n\t\t\tif (this.data[what].files[this.data[what].order[i]]) {\n\t\t\t\tfileList.push(this.data[what].files[this.data[what].order[i]]);\n\t\t\t}\n\t\t}\n\t\treturn fileList;\n\t}\n\n\tsubmit() {\n\t\tif (this.selected_project != '') {\n\t\t\tfor (var what in this.data) {\n\t\t\t\tif (this.data.hasOwnProperty(what)) {\n\t\t\t\t\tvar fileList = this.buildFileList(what);\n\t\t\t\t\tif (fileList.length === this.data[what].order.length) {\n\t\t\t\t\t\tthis.isWaiting = true;\n\t\t\t\t\t\tthis.data[what].status = 'na';\n\t\t\t\t\t\tvar data = {file: fileList, what: what, project_id: this.selected_project};\n\t\t\t\t\t\tthis.uploadService.uploadFile(data)\n\t\t\t\t\t\t\t.then(function (what, ref) {\n\t\t\t\t\t\t\t\t\treturn function (response) {\n\t\t\t\t\t\t\t\t\t\tref.isWaiting = false;\n\t\t\t\t\t\t\t\t\t\tref.data[what].response = response.data;\n\t\t\t\t\t\t\t\t\t\t// console.log(response.data.valid);\n\t\t\t\t\t\t\t\t\t\tif (response.data.valid) {\n\t\t\t\t\t\t\t\t\t\t\tref.data[what].status = 'ok';\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tref.data[what].status = 'ng';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}(what, this),\n\t\t\t\t\t\t\t\t// error\n\t\t\t\t\t\t\t\t([status, dataResponse]) => {\n\t\t\t\t\t\t\t\t\t// console.log(status);\n\t\t\t\t\t\t\t\t\t// console.log(dataResponse);\n\t\t\t\t\t\t\t\t\tthis.isWaiting = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default upload;\n"]}